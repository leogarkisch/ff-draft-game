#!/usr/bin/env python3
"""
Restore 20 test submissions directly into the SQLite database.
"""
import sqlite3

DB_PATH = 'instance/draft_game.db'  # Database file

# Column descriptions:
# name: Player name (string)
# email: Player email (string, autogenerated)
# guess: Submitted number (integer)
# timestamp: Submission time in Eastern Time (ET), format 'YYYY-MM-DD HH:MM:SS'

## Extracted submissions from PDF
# All timestamps below are in Eastern Time (ET), matching the PDF display
submissions = [
    {"name": "Bailey", "guess": 274, "timestamp": "08/29 04:13 AM"},
    {"name": "Elliot", "guess": 279, "timestamp": "08/29 02:34 AM"},
    {"name": "Hillel", "guess": 225, "timestamp": "08/29 08:35 PM"},
    {"name": "Lily", "guess": 222, "timestamp": "08/29 08:42 PM"},
    {"name": "Dana/Tony", "guess": 220, "timestamp": "08/29 02:37 AM"},
    {"name": "Kyle", "guess": 111, "timestamp": "08/29 05:11 AM"},
    {"name": "Keegan", "guess": 432, "timestamp": "08/29 05:51 PM"},
    {"name": "Alex", "guess": 81, "timestamp": "08/29 08:00 PM"},
    {"name": "Leo", "guess": 49, "timestamp": "08/29 01:57 AM"},
    {"name": "Nikhil", "guess": 492, "timestamp": "08/29 09:09 PM"},
    {"name": "Joseph", "guess": 499, "timestamp": "08/29 02:34 AM"},
    {"name": "Bayron", "guess": 34, "timestamp": "08/29 06:38 PM"},
    {"name": "Austin", "guess": 0, "timestamp": "08/29 03:21 AM"},
    {"name": "Lauren", "guess": 555, "timestamp": "08/29 02:01 AM"},
    {"name": "Pratika", "guess": 620, "timestamp": "08/29 02:48 PM"},
    {"name": "Akash", "guess": 626, "timestamp": "08/29 09:06 PM"},
    {"name": "Charlie", "guess": 666, "timestamp": "08/29 08:55 PM"},
    {"name": "Jeff", "guess": 783, "timestamp": "08/29 08:56 PM"},
    {"name": "River", "guess": 854, "timestamp": "08/29 10:04 AM"},
    {"name": "Nick", "guess": 999, "timestamp": "08/29 09:14 PM"}
]

def restore_submissions():
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()

    # Clear existing player records
    cursor.execute("DELETE FROM player")
    conn.commit()

    # Insert each submission (using dummy email and timestamp)
    from datetime import datetime
    from datetime import datetime
    # Sort submissions by timestamp
    import pytz
    def parse_dt(sub):
        # Parse as UTC
        dt_utc = datetime.strptime(f'2025 {sub["timestamp"]}', '%Y %m/%d %I:%M %p')
        dt_utc = pytz.UTC.localize(dt_utc)
        return dt_utc
    sorted_subs = sorted(submissions, key=parse_dt)
    for sub in sorted_subs:
        dt_utc = parse_dt(sub)
        timestamp_str = dt_utc.strftime('%Y-%m-%d %H:%M:%S')
        cursor.execute(
            "INSERT INTO player (name, email, guess, timestamp) VALUES (?, ?, ?, ?)",
            (sub["name"], f'{sub["name"].lower().replace(" ",".")}@example.com', sub["guess"], timestamp_str)
        )
    conn.commit()
    print(f"âœ… Restored {len(submissions)} submissions to the database.")
    conn.close()

if __name__ == "__main__":
    restore_submissions()
